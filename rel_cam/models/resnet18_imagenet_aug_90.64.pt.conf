{
    "ACCELERATOR": "cuda",
    "ACCUM_GRAD_BATCHES": "1",
    "ATF": "{'aug': Compose([\n  HorizontalFlip(always_apply=False, p=0.5),\n  VerticalFlip(always_apply=False, p=0.5),\n  Rotate(always_apply=False, p=0.5, limit=(-180, 180), interpolation=1, border_mode=4, value=None, mask_value=None, rotate_method='largest_box', crop_border=False),\n  Transpose(always_apply=False, p=0.5),\n  ShiftScaleRotate(always_apply=False, p=0.2, shift_limit_x=(-0.0625, 0.0625), shift_limit_y=(-0.0625, 0.0625), scale_limit=(-0.19999999999999996, 0.19999999999999996), rotate_limit=(-45, 45), interpolation=1, border_mode=4, value=None, mask_value=None, rotate_method='largest_box'),\n  RandomResizedCrop(always_apply=False, p=0.5, height=224, width=224, scale=(0.8, 1.0), ratio=(0.75, 1.3333333333333333), interpolation=1),\n  OneOf([\n    OpticalDistortion(always_apply=False, p=0.5, distort_limit=(-1.0, 1.0), shift_limit=(-0.05, 0.05), interpolation=1, border_mode=4, value=None, mask_value=None),\n    GridDistortion(always_apply=False, p=0.5, num_steps=5, distort_limit=(-1.0, 1.0), interpolation=1, border_mode=4, value=None, mask_value=None, normalized=False),\n    ElasticTransform(always_apply=False, p=0.5, alpha=3, sigma=50, alpha_affine=50, interpolation=1, border_mode=4, value=None, mask_value=None, approximate=False, same_dxdy=False),\n  ], p=0.2),\n  OneOf([\n    HueSaturationValue(always_apply=False, p=0.5, hue_shift_limit=(-10, 10), sat_shift_limit=(-15, 15), val_shift_limit=(-10, 10)),\n    RandomBrightnessContrast(always_apply=False, p=0.5, brightness_limit=(-0.2, 0.2), contrast_limit=(-0.2, 0.2), brightness_by_max=True),\n  ], p=0.3),\n  OneOf([\n    GaussNoise(always_apply=False, p=0.5, var_limit=(10.0, 50.0), per_channel=True, mean=0),\n    MotionBlur(always_apply=False, p=0.5, blur_limit=(3, 7), allow_shifted=True),\n    MedianBlur(always_apply=False, p=0.5, blur_limit=(3, 5)),\n    GaussianBlur(always_apply=False, p=0.5, blur_limit=(3, 7), sigma_limit=(0, 0)),\n  ], p=0.1),\n], p=1.0, bbox_params=None, keypoint_params=None, additional_targets={}, is_check_shapes=True), 'preproc': Compose([\n  Normalize(always_apply=True, p=1.0, mean=(0.485, 0.456, 0.406), std=(0.229, 0.224, 0.225), max_pixel_value=255.0),\n], p=1.0, bbox_params=None, keypoint_params=None, additional_targets={}, is_check_shapes=True), 'resize_to_tensor': Compose([\n  Resize(always_apply=False, p=1, height=224, width=224, interpolation=1),\n  ToTensorV2(always_apply=True, p=1.0, transpose_mask=False),\n], p=1.0, bbox_params=None, keypoint_params=None, additional_targets={}, is_check_shapes=True)}",
    "AUGMENT": "True",
    "BATCH_SIZE": "128",
    "CONFIGS": "{'resnet18_imagenet': {'MODEL_NAME': 'resnet18', 'NUM_CLASSES': 5, 'NUM_EPOCHS': 100, 'ACCUM_GRAD_BATCHES': 1, 'USE_AMP': True, 'USE_GRAD_SCALER': True, 'EARLY_STOP': True, 'PATIENCE': 15, 'OPTIMIZER': <class 'torch.optim.adam.Adam'>, 'OPTIMIZER_PARAMS': {'lr': 0.001, 'weight_decay': 0.0005}, 'SCHEDULER': <class 'torch.optim.lr_scheduler.ReduceLROnPlateau'>, 'SCHEDULER_PARAMS': {'mode': 'min', 'factor': 0.1, 'patience': 5, 'verbose': True}, 'CRITERTION': <class 'torch.nn.modules.loss.CrossEntropyLoss'>, 'BATCH_SIZE': 128, 'INPUT_SIZE': (224, 224), 'NUM_WORKERS': 8, 'PREPROC': True, 'AUGMENT': True, 'MODEL_FOLDER': Path('models'), 'MATMUL_PRECISION': 'medium', 'ACCELERATOR': 'cuda', 'CUDNN_BENCHMARK': False, 'CUDNN_DETERMINISTIC': True, 'DATA_DIR': '/mnt/wd8d/pathology/ROI/LC25000/combined/', 'ATF': {'aug': Compose([\n  HorizontalFlip(always_apply=False, p=0.5),\n  VerticalFlip(always_apply=False, p=0.5),\n], p=1.0, bbox_params=None, keypoint_params=None, additional_targets={}, is_check_shapes=True), 'preproc': Compose([\n  Normalize(always_apply=True, p=1.0, mean=(0.485, 0.456, 0.406), std=(0.229, 0.224, 0.225), max_pixel_value=255.0),\n], p=1.0, bbox_params=None, keypoint_params=None, additional_targets={}, is_check_shapes=True), 'resize_to_tensor': Compose([\n  Resize(always_apply=False, p=1, height=224, width=224, interpolation=1),\n  ToTensorV2(always_apply=True, p=1.0, transpose_mask=False),\n], p=1.0, bbox_params=None, keypoint_params=None, additional_targets={}, is_check_shapes=True)}}, 'resnet18_imagenet_aug': {'MODEL_NAME': 'resnet18', 'NUM_CLASSES': 5, 'NUM_EPOCHS': 100, 'ACCUM_GRAD_BATCHES': 1, 'USE_AMP': True, 'USE_GRAD_SCALER': True, 'EARLY_STOP': True, 'PATIENCE': 15, 'OPTIMIZER': <class 'torch.optim.adam.Adam'>, 'OPTIMIZER_PARAMS': {'lr': 0.001, 'weight_decay': 0.0005}, 'SCHEDULER': <class 'torch.optim.lr_scheduler.ReduceLROnPlateau'>, 'SCHEDULER_PARAMS': {'mode': 'min', 'factor': 0.1, 'patience': 5, 'verbose': True}, 'CRITERTION': <class 'torch.nn.modules.loss.CrossEntropyLoss'>, 'BATCH_SIZE': 128, 'INPUT_SIZE': (224, 224), 'NUM_WORKERS': 8, 'PREPROC': True, 'AUGMENT': True, 'MODEL_FOLDER': Path('models'), 'MATMUL_PRECISION': 'medium', 'ACCELERATOR': 'cuda', 'CUDNN_BENCHMARK': False, 'CUDNN_DETERMINISTIC': True, 'DATA_DIR': '/mnt/wd8d/pathology/ROI/LC25000/combined/', 'ATF': {'aug': Compose([\n  HorizontalFlip(always_apply=False, p=0.5),\n  VerticalFlip(always_apply=False, p=0.5),\n  Rotate(always_apply=False, p=0.5, limit=(-180, 180), interpolation=1, border_mode=4, value=None, mask_value=None, rotate_method='largest_box', crop_border=False),\n  Transpose(always_apply=False, p=0.5),\n  ShiftScaleRotate(always_apply=False, p=0.2, shift_limit_x=(-0.0625, 0.0625), shift_limit_y=(-0.0625, 0.0625), scale_limit=(-0.19999999999999996, 0.19999999999999996), rotate_limit=(-45, 45), interpolation=1, border_mode=4, value=None, mask_value=None, rotate_method='largest_box'),\n  RandomResizedCrop(always_apply=False, p=0.5, height=224, width=224, scale=(0.8, 1.0), ratio=(0.75, 1.3333333333333333), interpolation=1),\n  OneOf([\n    OpticalDistortion(always_apply=False, p=0.5, distort_limit=(-1.0, 1.0), shift_limit=(-0.05, 0.05), interpolation=1, border_mode=4, value=None, mask_value=None),\n    GridDistortion(always_apply=False, p=0.5, num_steps=5, distort_limit=(-1.0, 1.0), interpolation=1, border_mode=4, value=None, mask_value=None, normalized=False),\n    ElasticTransform(always_apply=False, p=0.5, alpha=3, sigma=50, alpha_affine=50, interpolation=1, border_mode=4, value=None, mask_value=None, approximate=False, same_dxdy=False),\n  ], p=0.2),\n  OneOf([\n    HueSaturationValue(always_apply=False, p=0.5, hue_shift_limit=(-10, 10), sat_shift_limit=(-15, 15), val_shift_limit=(-10, 10)),\n    RandomBrightnessContrast(always_apply=False, p=0.5, brightness_limit=(-0.2, 0.2), contrast_limit=(-0.2, 0.2), brightness_by_max=True),\n  ], p=0.3),\n  OneOf([\n    GaussNoise(always_apply=False, p=0.5, var_limit=(10.0, 50.0), per_channel=True, mean=0),\n    MotionBlur(always_apply=False, p=0.5, blur_limit=(3, 7), allow_shifted=True),\n    MedianBlur(always_apply=False, p=0.5, blur_limit=(3, 5)),\n    GaussianBlur(always_apply=False, p=0.5, blur_limit=(3, 7), sigma_limit=(0, 0)),\n  ], p=0.1),\n], p=1.0, bbox_params=None, keypoint_params=None, additional_targets={}, is_check_shapes=True), 'preproc': Compose([\n  Normalize(always_apply=True, p=1.0, mean=(0.485, 0.456, 0.406), std=(0.229, 0.224, 0.225), max_pixel_value=255.0),\n], p=1.0, bbox_params=None, keypoint_params=None, additional_targets={}, is_check_shapes=True), 'resize_to_tensor': Compose([\n  Resize(always_apply=False, p=1, height=224, width=224, interpolation=1),\n  ToTensorV2(always_apply=True, p=1.0, transpose_mask=False),\n], p=1.0, bbox_params=None, keypoint_params=None, additional_targets={}, is_check_shapes=True)}}}",
    "CONFIG_ID": "resnet18_imagenet_aug",
    "CRITERTION": "<class 'torch.nn.modules.loss.CrossEntropyLoss'>",
    "CUDNN_BENCHMARK": "False",
    "CUDNN_DETERMINISTIC": "True",
    "DATA_DIR": "/mnt/wd8d/pathology/ROI/LC25000/combined/",
    "EARLY_STOP": "True",
    "INPUT_SIZE": "(224, 224)",
    "MATMUL_PRECISION": "medium",
    "MODEL_FOLDER": "models",
    "MODEL_NAME": "resnet18",
    "NUM_CLASSES": "5",
    "NUM_EPOCHS": "100",
    "NUM_WORKERS": "8",
    "OPTIMIZER": "<class 'torch.optim.adam.Adam'>",
    "OPTIMIZER_PARAMS": "{'lr': 0.001, 'weight_decay': 0.0005}",
    "PATIENCE": "15",
    "PREPROC": "True",
    "SCHEDULER": "<class 'torch.optim.lr_scheduler.ReduceLROnPlateau'>",
    "SCHEDULER_PARAMS": "{'mode': 'min', 'factor': 0.1, 'patience': 5, 'verbose': True}",
    "USE_AMP": "True",
    "USE_GRAD_SCALER": "True"
}